<?xml version="1.0"?>
<launch>
  <arg
    name="occupancy_grid_map_method"
    default="pointcloud_based_occupancy_grid_map"
    description="options: pointcloud_based_occupancy_grid_map, laserscan_based_occupancy_grid_map, multi_lidar_pointcloud_based_occupancy_grid_map"
  />
  <arg name="occupancy_grid_map_updater" default="binary_bayes_filter" description="options: binary_bayes_filter"/>
  <arg name="detected_objects_filter_method" default="lanelet_filter" description="options: lanelet_filter, position_filter"/>
  <arg
    name="detected_objects_validation_method"
    default="obstacle_pointcloud"
    description="options: obstacle_pointcloud, occupancy_grid (occupancy_grid_map_method must be laserscan_based_occupancy_grid_map)"
  />
  <arg name="data_path" default="$(env HOME)/autoware_data" description="packages data and artifacts directory path"/>
  <arg name="lidar_detection_model" default="centerpoint" description="options: `transfusion`, `centerpoint`, `apollo`, `pointpainting`, `clustering`"/>

  <!-- In the Gen2 sensor configuration, the traffic_light_recognition node is launched not through the conventional autoware.universe/launch/tier4_perception_launch but with its own custom launch file.
  This is because autoware.universe's launch files do not support an arbitrary number of cameras. If autoware.universe's launch files were to support it, it is recommended to use them instead. -->
  <include file="$(find-pkg-share autoware_launch)/launch/components/traffic_light_recognition/traffic_light.launch.xml">
    <arg name="fusion_only" value="true"/>
    <arg name="enable_fine_detection" value="true"/>
    <arg name="image_number" value="4"/>
    <arg name="input/cloud" value="/sensing/lidar/top/pointcloud_raw"/>
    <arg name="internal/traffic_signals" value="/perception/traffic_light_recognition/internal/traffic_signals"/>
    <arg name="fusion/traffic_signals" value="/perception/traffic_light_recognition/fusion/traffic_signals"/>
    <arg name="external/traffic_signals" value="/perception/traffic_light_recognition/external/traffic_signals"/>
    <arg name="output/traffic_signals" value="/perception/traffic_light_recognition/traffic_signals"/>
    <arg name="use_crosswalk_traffic_light_estimator" value="true"/>
    <arg name="crosswalk_traffic_light_estimator_param_file" value="$(find-pkg-share autoware_crosswalk_traffic_light_estimator)/config/crosswalk_traffic_light_estimator.param.yaml"/>

    <arg name="camera_namespaces" value="['camera4', 'camera5', 'camera6', 'camera7']"/>
    <arg name="fine_detector_label_path" value="$(var data_path)/traffic_light_fine_detector/tlr_labels.txt"/>
    <arg name="fine_detector_model_path" value="$(var data_path)/traffic_light_fine_detector/tlr_yolox_s_batch_6.onnx"/>
    <arg name="car_classifier_label_path" value="$(var data_path)/traffic_light_classifier/lamp_labels.txt"/>
    <arg name="pedestrian_classifier_label_path" value="$(var data_path)/traffic_light_classifier/lamp_labels_ped.txt"/>
    <arg name="car_classifier_model_path" value="$(var data_path)/traffic_light_classifier/traffic_light_classifier_mobilenetv2_batch_6.onnx"/>
    <arg name="pedestrian_classifier_model_path" value="$(var data_path)/traffic_light_classifier/ped_traffic_light_classifier_mobilenetv2_batch_6.onnx"/>
  </include>

  <!-- NOTE: Override by false to disable conventional traffic light recognition launch -->
  <let name="use_traffic_light_recognition" value="false"/>

  <include file="$(find-pkg-share tier4_perception_launch)/launch/perception.launch.xml">
    <arg name="mode" value="$(var perception_mode)"/>
    <arg name="vehicle_param_file" value="$(find-pkg-share $(var vehicle_model)_description)/config/vehicle_info.param.yaml"/>
    <arg name="pointcloud_container_name" value="$(var pointcloud_container_name)"/>
    <arg name="occupancy_grid_map_method" value="$(var occupancy_grid_map_method)"/>
    <arg name="occupancy_grid_map_updater" value="$(var occupancy_grid_map_updater)"/>
    <arg name="objects_filter_method" value="$(var detected_objects_filter_method)"/>
    <arg name="objects_validation_method" value="$(var detected_objects_validation_method)"/>
    <arg name="data_path" value="$(var data_path)"/>
    <arg name="use_low_height_cropbox" value="false"/>
    <arg name="enable_fine_detection" value="$(var traffic_light_recognition/enable_fine_detection)"/>
    <arg name="centerpoint_model_name" value="centerpoint_x2"/>
    <arg name="object_recognition_detection_lidar_model_param_path" value="$(var centerpoint_model_path)"/>
    <arg name="namespace1" value="camera7"/>
    <arg name="external/traffic_signals" value="/v2x/traffic_signals"/>
    <arg name="use_low_height_cropbox" value="true"/>
    <arg name="use_roi_based_cluster" value="false"/>
    <arg name="use_detection_by_tracker" value="true"/>
    <arg name="image_number" value="6"/>
    <arg name="image_raw0" value="/sensing/camera/camera0/image_raw"/>
    <arg name="image_raw1" value="/sensing/camera/camera1/image_raw"/>
    <arg name="image_raw2" value="/sensing/camera/camera2/image_raw"/>
    <arg name="image_raw3" value="/sensing/camera/camera3/image_raw"/>
    <arg name="image_raw4" value="/sensing/camera/camera4/image_raw"/>
    <arg name="image_raw5" value="/sensing/camera/camera5/image_raw"/>
    <arg name="image_raw6" value="/sensing/camera/camera6/image_raw"/>
    <arg name="image_raw7" value="/sensing/camera/camera7/image_raw"/>

    <!-- object recognition -->
    <arg
      name="object_recognition_detection_euclidean_cluster_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/detection/clustering/euclidean_cluster.param.yaml"
    />
    <arg name="object_recognition_detection_outlier_param_path" value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/detection/clustering/outlier.param.yaml"/>
    <arg
      name="object_recognition_detection_voxel_grid_based_euclidean_cluster_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/detection/clustering/voxel_grid_based_euclidean_cluster.param.yaml"
    />
    <arg
      name="object_recognition_detection_object_lanelet_filter_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/detection/object_filter/object_lanelet_filter.param.yaml"
    />
    <arg
      name="object_recognition_detection_object_position_filter_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/detection/object_filter/object_position_filter.param.yaml"
    />
    <arg
      name="object_recognition_detection_pointcloud_map_filter_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/detection/pointcloud_filter/pointcloud_map_filter.param.yaml"
    />
    <arg
      name="object_recognition_detection_fusion_sync_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/detection/image_projection_based_fusion/fusion_common.param.yaml"
    />
    <arg
      name="object_recognition_detection_roi_cluster_fusion_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/detection/image_projection_based_fusion/roi_cluster_fusion.param.yaml"
    />
    <arg
      name="object_recognition_detection_roi_pointcloud_fusion_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/detection/image_projection_based_fusion/roi_pointcloud_fusion.param.yaml"
    />
    <arg
      name="object_recognition_detection_roi_detected_object_fusion_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/detection/image_projection_based_fusion/roi_detected_object_fusion.param.yaml"
    />
    <arg
      name="object_recognition_detection_obstacle_pointcloud_based_validator_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/detection/detected_object_validation/obstacle_pointcloud_based_validator.param.yaml"
    />
    <arg
      name="object_recognition_prediction_map_based_prediction_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/prediction/map_based_prediction.param.yaml"
    />
    <arg
      name="object_recognition_detection_object_merger_data_association_matrix_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/detection/object_merger/data_association_matrix.param.yaml"
    />
    <arg
      name="object_recognition_detection_object_merger_distance_threshold_list_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/detection/object_merger/overlapped_judge.param.yaml"
    />
    <arg
      name="object_recognition_detection_detection_by_tracker_param"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/detection/detection_by_tracker/detection_by_tracker.param.yaml"
    />
    <arg
      name="object_recognition_detection_radar_crossing_objects_noise_filter_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/detection/radar_crossing_objects_noise_filter/radar_crossing_objects_noise_filter.param.yaml"
    />
    <arg
      name="object_recognition_detection_radar_lanelet_filtering_range_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/detection/object_filter/radar_lanelet_filter.param.yaml"
    />
    <arg
      name="object_recognition_detection_radar_object_clustering_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/detection/clustering/radar_object_clustering.param.yaml"
    />
    <arg name="object_recognition_detection_lidar_model_param_path" value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/detection/lidar_model"/>
    <arg
      name="object_recognition_detection_object_velocity_splitter_radar_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/detection/object_velocity_splitter/object_velocity_splitter_radar.param.yaml"
    />
    <arg
      name="object_recognition_detection_object_velocity_splitter_radar_fusion_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/detection/object_velocity_splitter/object_velocity_splitter_radar_fusion.param.yaml"
    />
    <arg
      name="object_recognition_detection_object_range_splitter_radar_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/detection/object_range_splitter/object_range_splitter_radar.param.yaml"
    />
    <arg
      name="object_recognition_detection_object_range_splitter_radar_fusion_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/detection/object_range_splitter/object_range_splitter_radar_fusion.param.yaml"
    />
    <arg
      name="object_recognition_detection_detection_by_tracker_param"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/detection/detection_by_tracker/detection_by_tracker.param.yaml"
    />
    <arg
      name="object_recognition_detection_radar_lanelet_filtering_range_param"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/detection/object_filter/radar_lanelet_filter.param.yaml"
    />
    <arg
      name="object_recognition_tracking_multi_object_tracker_data_association_matrix_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/tracking/multi_object_tracker/data_association_matrix.param.yaml"
    />
    <arg
      name="object_recognition_tracking_multi_object_tracker_input_channels_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/tracking/multi_object_tracker/input_channels.param.yaml"
    />
    <arg
      name="object_recognition_tracking_multi_object_tracker_node_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/tracking/multi_object_tracker/multi_object_tracker_node.param.yaml"
    />
    <arg
      name="object_recognition_tracking_radar_object_tracker_data_association_matrix_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/tracking/radar_object_tracker/data_association_matrix.param.yaml"
    />
    <arg
      name="object_recognition_tracking_radar_object_tracker_tracking_setting_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/tracking/radar_object_tracker/default_tracker.param.yaml"
    />
    <arg
      name="object_recognition_tracking_radar_object_tracker_node_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/tracking/radar_object_tracker/radar_object_tracker.param.yaml"
    />
    <arg
      name="object_recognition_tracking_object_merger_data_association_matrix_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/tracking/tracking_object_merger/data_association_matrix.param.yaml"
    />
    <arg
      name="object_recognition_tracking_object_merger_node_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/tracking/tracking_object_merger/decorative_tracker_merger.param.yaml"
    />

    <!-- obstacle segmentation -->
    <arg
      name="obstacle_segmentation_ground_segmentation_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/obstacle_segmentation/ground_segmentation/ground_segmentation.param.yaml"
    />
    <arg
      name="obstacle_segmentation_ground_segmentation_elevation_map_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/obstacle_segmentation/ground_segmentation/elevation_map_parameters.yaml"
    />

    <!-- occupancy grid map -->
    <arg name="occupancy_grid_map_param_path" value="$(find-pkg-share autoware_launch)/config/perception/occupancy_grid_map/$(var occupancy_grid_map_method).param.yaml"/>
    <arg name="occupancy_grid_map_updater_param_path" value="$(find-pkg-share autoware_launch)/config/perception/occupancy_grid_map/$(var occupancy_grid_map_updater)_updater.param.yaml"/>

    <!-- traffic light recognition -->
    <arg name="use_traffic_light_recognition" value="$(var use_traffic_light_recognition)"/>
    <arg name="traffic_light_recognition/enable_fine_detection" value="$(var traffic_light_recognition/enable_fine_detection)"/>
    <arg name="traffic_light_recognition/fusion_only" value="true"/>
    <arg name="traffic_light_image_number" value="1"/>

    <arg name="traffic_light_arbiter_param_path" value="$(find-pkg-share autoware_launch)/config/perception/traffic_light_arbiter/traffic_light_arbiter.param.yaml"/>
    <arg name="traffic_light_fine_detector_model_path" value="$(var data_path)/traffic_light_fine_detector"/>
    <arg name="traffic_light_fine_detector_model_name" value="tlr_car_ped_yolox_s_batch_6"/>
    <arg name="traffic_light_classifier_model_path" value="$(var data_path)/traffic_light_classifier"/>
    <arg name="car_traffic_light_classifier_model_name" value="traffic_light_classifier_mobilenetv2_batch_6"/>
    <arg name="pedestrian_traffic_light_classifier_model_name" value="ped_traffic_light_classifier_mobilenetv2_batch_4"/>
  </include>
</launch>
